name: Build and Publish

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: '*/15 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'github-actions[bot]' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Number of commits to fetch. 0 indicates all history for all branches and tags.
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Imagemagick
        uses: mfinelli/setup-imagemagick@v6

      - name: make a acreenshot and convert
        id: enhance_check
        run: ./script/get_screenshot
        shell: bash

      - name: Convert Markdown to HTML
        uses: natescherer/markdown-to-html-with-github-style-action@v1.1.0
        with:
          path: README.md
          outputpath: build
      - name: Move README.html to index.html
        run: mv build/readme.html index.html

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3 # or specific "vX.X.X" version tag for this action
        with:
          path: build/

      - name: Move image to history folder
        run: |-
          mkdir -p history/$(date +%Y/%m)
          timestamp=$(date +%Y/%m/%d-%U%M)
          mv build/diffused.png history/${timestamp}-diffused.png
          mv build/resized.png history/${timestamp}-color.png

      - name: Commit and push changes
        run: |-
          git config user.name "BerenBot"
          git config user.email "bot@wendbaar.nl"
          git add history/$(date +%Y/%m)
          timestamp=$(date -u)
          git commit -m "Latest data: ${timestamp}" || exit 0
          git push origin main
  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
